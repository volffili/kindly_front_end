{"version":3,"sources":["lovepalms_minified.svg","lovepalms.jpg","Url.js","components/LocationAutocomplete.js","components/PageWrap.js","components/FormStandard.js","components/Alert.js","pages/INeedHelp.js","components/HelpCard.js","components/Map.js","components/Loading.js","components/Pagination.js","pages/IWantToHelp.js","pages/LandingPage.js","pages/Feedback.js","components/Navbar.js","components/HelpRequestDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","baseUrl","Wrap","styled","div","ListGroupOnTop","ListGroup","HandCursorListGroupItem","ListGroupItem","props","useState","address","setAddress","searchOptions","location","window","google","maps","LatLng","radius","types","value","onChange","onSelect","geocodeByAddress","then","results","getLatLng","latLng","onAddressSelect","formatted_address","lat","lng","catch","error","console","getInputProps","suggestions","getSuggestionItemProps","loading","Input","placeholder","className","map","suggestion","key","color","active","description","Container","StdFormInfoCol","Col","StdFormCol","buttonLabel","title","body","isOpen","toggle","Modal","ModalHeader","ModalBody","ModalFooter","Button","onClick","isModalOpen","setModal","toggleModal","validationSchema","Yup","shape","name","required","email","phone_number","request_topic","request_description","PageWrap","Alert","Row","initialValues","onSubmit","values","query_params","api_name","requester_name","requester_age","requester_email","requester_phone_number","requester_address","requester_address_lat","requester_address_lng","request_details","log","axios","get","params","FormGroup","label","id","component","ReactstrapInput","type","Label","htmlFor","LocationAutocomplete","rows","align","outline","Description","CardText","useEffect","Card","style","height","CardBody","CardTitle","helpRequest","Date","request_create_timestamp","toLocaleDateString","url","request_id","open","Map","withGoogleMap","defaultZoom","zoom","defaultCenter","center","helpRequests","request","link","CustomMarker","isMarkerOpen","setMarkerIsOpen","position","parseFloat","options","closeBoxURL","enableEventPropagation","to","target","width","marginTop","marginLeft","requestsPerPage","totalRequests","paginate","pageNumbers","selectedPageNumber","setSelectedPageNumber","maxNum","Math","ceil","pageClick","pageNumber","i","push","Pagination","PaginationItem","PaginationLink","first","previous","number","next","last","setHelpRequests","totalCount","setTotalCount","setLoading","currentPage","setCurrentPage","offset","row_count","res","data","result","help_requests","count","err","indexOfLastRequest","indexOfFirstRequest","currentRequests","slice","containerElement","mapElement","Loading","md","lg","xl","HelpCard","length","Img100","img","fluid","maxWidth","sm","CardFooter","size","src","lovepalms_svg","afterInjection","lovepalms_jpg","href","max","feedback_topic","feedback_description","requester_surname","topic","content","Navbar","light","expand","fixed","NavbarBrand","tag","Link","Collapse","navbar","Nav","NavItem","NavLink","setHelpRequest","navigationLink","setNavigationLink","match","display","justifyContent","App","path","exact","LandingPage","INeedHelp","IWantToHelp","Feedback","HelpRequestDetail","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cd9c6636.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lovepalms_minified.cb992957.svg\";","module.exports = __webpack_public_path__ + \"static/media/lovepalms.74439763.jpg\";","export const baseUrl = \"https://nnajnotk8l.execute-api.eu-west-1.amazonaws.com/TEST/neighbourhoodHelpBackendPython\"\r\n","import PlacesAutocomplete from \"react-places-autocomplete\"\nimport { geocodeByAddress, getLatLng } from \"react-places-autocomplete\"\nimport React, { useState } from \"react\"\nimport { ListGroup, ListGroupItem } from \"reactstrap\"\nimport styled from \"styled-components/macro\"\nimport { Input } from \"reactstrap\"\n\nconst Wrap = styled.div`\n  position: relative;\n`\n\nconst ListGroupOnTop = styled(ListGroup)`\n  position: absolute;\n  z-index: 1000;\n`\nconst HandCursorListGroupItem = styled(ListGroupItem)`\n  cursor: pointer;\n`\n\nexport default (props) => {\n  const [address, setAddress] = useState(\"\")\n\n  const handleSelect = (address) => {\n    setAddress(address)\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => {\n        props.onAddressSelect({\n          formatted_address: address,\n          lat: latLng.lat,\n          lng: latLng.lng,\n        })\n      })\n      .catch((error) => console.error(\"Error\", error))\n  }\n\n  const searchOptions = {\n    //Prague location\n    location: new window.google.maps.LatLng(49.8600624, 15.5860745),\n    radius: 100000,\n    types: [\"address\"],\n  }\n\n  return (\n    <PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleSelect} searchOptions={searchOptions}>\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n        <Wrap>\n          <Input\n            {...getInputProps({\n              placeholder: props.placeholder,\n              className: \"location-search-input address-input\",\n            })}\n          />\n          <ListGroupOnTop>\n            {loading && <HandCursorListGroupItem>Loading...</HandCursorListGroupItem>}\n            {suggestions.map((suggestion) => {\n              return (\n                <HandCursorListGroupItem\n                  key=\"suggestion\"\n                  color={suggestion.active && \"info\"}\n                  {...getSuggestionItemProps(suggestion)}\n                >\n                  <span>{suggestion.description}</span>\n                </HandCursorListGroupItem>\n              )\n            })}\n          </ListGroupOnTop>\n        </Wrap>\n      )}\n    </PlacesAutocomplete>\n  )\n}\n","import styled from \"styled-components/macro\"\r\n\r\nimport { Container } from \"reactstrap\"\r\n\r\nexport default styled(Container)`\r\n  padding: 66px 10px 10px 10px; /*+56px is the height of navbar*/\r\n`\r\n","import { Button, Col } from \"reactstrap\"\r\nimport styled from \"styled-components/macro\"\r\n\r\nexport const StdFormInfoCol = styled(Col)`\r\n  max-width: 700px;\r\n`\r\nexport const StdFormCol = styled(Col)`\r\n  max-width: 600px;\r\n`\r\n","import React, { useState } from \"react\"\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\"\r\n\r\nexport default ({ buttonLabel, title, body, className, isOpen, toggle }) => {\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={toggle} className={className}>\r\n      <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n      <ModalBody>{body}</ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"dark\" onClick={toggle}>\r\n          {buttonLabel}\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Field, Form, Formik } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport axios from \"axios\"\r\nimport { baseUrl } from \"../Url\"\r\nimport { FormGroup, Label, Row, Col, Button } from \"reactstrap\"\r\nimport LocationAutocomplete from \"../components/LocationAutocomplete\"\r\nimport { ReactstrapInput } from \"reactstrap-formik\"\r\nimport PageWrap from \"../components/PageWrap\"\r\nimport { StdFormInfoCol, StdFormCol } from \"../components/FormStandard\"\r\nimport Alert from \"../components/Alert\"\r\n\r\nexport default () => {\r\n  const [address, setAddress] = useState({})\r\n  const [isModalOpen, setModal] = useState(false)\r\n  const toggleModal = () => setModal(!isModalOpen)\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Chybí jméno\"),\r\n    email: Yup.string().email(\"Neplatný email\").required(\"Chybí email\"),\r\n    phone_number: Yup.string(),\r\n    request_topic: Yup.string().required(\"Chybí předmět\"),\r\n    request_description: Yup.string().required(\"Chybí popis\"),\r\n  })\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    phone_number: \"\",\r\n    email: \"\",\r\n    request_topic: \"\",\r\n    request_description: \"\",\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    toggleModal()\r\n    let query_params = {\r\n      api_name: \"post_help_request\",\r\n      requester_name: values.name,\r\n      requester_age: null,\r\n      requester_email: values.email,\r\n      requester_phone_number: values.phone_number,\r\n      requester_address: address.formatted_address,\r\n      requester_address_lat: address.lat,\r\n      requester_address_lng: address.lng,\r\n      request_topic: values.request_topic,\r\n      request_details: values.request_description,\r\n    }\r\n    console.log(\"Query Params = \", query_params)\r\n\r\n    axios.get(baseUrl, {\r\n      params: query_params,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PageWrap>\r\n      <Alert\r\n        isOpen={isModalOpen}\r\n        toggle={toggleModal}\r\n        title=\"Title\"\r\n        body=\"Teď už jen stačí počkat než se ti někdo ozve! asldfkasjdlfk jsadfl dfk jalsfldskaj fa adlkfj Např. Mám 2 psy typu čivava které je potřeba venčit 2-krát denně, ráno a veče \"\r\n        buttonLabel=\"Dobře\"\r\n      ></Alert>\r\n      <Row className=\"justify-content-center mb-4\">\r\n        <StdFormInfoCol>\r\n          <h3>S čím potřebujete pomoci?</h3>\r\n          <p>\r\n            Každý z nás se občas dostane do situace, kdy si neví rady. Nebojte se a požádejte o pomoc. Ať už se jedná o\r\n            výměnu žárovky, přivrtání poličky, donesení nákupu či venčení psa. Pokusíme se vás propojit s lidmi z vašeho\r\n            okolí, kteří rádi podají pomocnou ruku.\r\n          </p>\r\n        </StdFormInfoCol>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {() => (\r\n              <Form className=\"askhelp-form\">\r\n                <Row className=\"justify-content-center\">\r\n                  <StdFormCol>\r\n                    <FormGroup>\r\n                      <Field\r\n                        label=\"Jméno*\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        component={ReactstrapInput}\r\n                        type=\"text\"\r\n                        placeholder=\"Vaše jméno a příjmení.\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"requester_address\">Adresa</Label>\r\n                      <LocationAutocomplete\r\n                        id=\"requester_address\"\r\n                        onAddressSelect={setAddress}\r\n                        placeholder=\"Vaše adresa nebude nikde zobrazena, pouze určí lokalitu.\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Field\r\n                        label=\"Email*\"\r\n                        component={ReactstrapInput}\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Vyplňte email, aby vás pomocníci mohli kontaktovat.\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Field\r\n                        label=\"Telefon\"\r\n                        component={ReactstrapInput}\r\n                        id=\"phone_number\"\r\n                        name=\"phone_number\"\r\n                        type=\"text\"\r\n                        placeholder=\"Pokud chcete pomoc urychlit, můžete vyplnit i telefon. \"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Field\r\n                        label=\"Předmět*\"\r\n                        component={ReactstrapInput}\r\n                        id=\"request_topic\"\r\n                        name=\"request_topic\"\r\n                        type=\"text\"\r\n                        placeholder=\"S čím potřebujete pomoci?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Field\r\n                        label=\"Popis*\"\r\n                        component={ReactstrapInput}\r\n                        id=\"request_description\"\r\n                        name=\"request_description\"\r\n                        type=\"textarea\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Popiště co nejpřesněji o co se jedná, aby pomocník přišel připravený. Bude potřeba přinést nářadí?\"\r\n                      />\r\n                    </FormGroup>\r\n                  </StdFormCol>\r\n                </Row>\r\n                <Row>\r\n                  <Col align=\"center\">\r\n                    <Button outline color=\"primary\" type=\"submit\">\r\n                      Poslat žádost\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Col>\r\n      </Row>\r\n    </PageWrap>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { Button, Card, CardText, CardBody, CardTitle } from \"reactstrap\"\r\nimport styled from \"styled-components/macro\"\r\n\r\nconst Description = styled(CardText)`\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 4;\r\n  -webkit-box-orient: vertical;\r\n`\r\n\r\nexport default (props) => {\r\n  useEffect(() => {}, [])\r\n\r\n  const redirectToDetails = () => {\r\n    const url = `/details/${props.helpRequest.request_id}`\r\n    window.open(url)\r\n  }\r\n\r\n  return (\r\n    <Card className=\"my-3\" color=\"light\" style={{ height: 260 }}>\r\n      <CardBody className=\"d-flex flex-column\">\r\n        <CardTitle>\r\n          <b>{props.helpRequest.request_topic}</b>\r\n        </CardTitle>\r\n        <Description>{props.helpRequest.request_details}</Description>\r\n        <CardText className=\"text-right mt-auto d-flex flex-row justify-content-between\">\r\n          {new Date(props.helpRequest.request_create_timestamp).toLocaleDateString()}\r\n          <Button outline color=\"primary\" onClick={redirectToDetails}>\r\n            Detail pomoci\r\n          </Button>\r\n        </CardText>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import {\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow,\n} from \"react-google-maps\"\nimport React, { useEffect, useState } from \"react\"\nimport {Link} from \"react-router-dom\";\n\nconst Map =\n  withGoogleMap((props) => {\n    useEffect(() => {\n    }, []);\n\n    return (\n      <GoogleMap\n        // Center of Czech Republic\n        defaultZoom={props.zoom}\n        defaultCenter={props.center}\n      >\n        {props.helpRequests.map((request) => (\n          <CustomMarker helpRequest={request} link={props.link}/>\n        ))}\n      </GoogleMap>\n    )\n  });\n\nconst CustomMarker = (props) => {\n  const [isMarkerOpen, setMarkerIsOpen] = useState(false);\n  useEffect(() => {\n\n  }, []);\n\n  return (\n    <Marker\n      position={{\n        lat: parseFloat(props.helpRequest.requester_address_lat),\n        lng: parseFloat(props.helpRequest.requester_address_lng),\n      }}\n      onClick={() => setMarkerIsOpen(!isMarkerOpen)}\n    >\n      {isMarkerOpen && (\n        <InfoWindow options={{ closeBoxURL: ``, enableEventPropagation: true }}>\n          <div>\n            <h3>{props.helpRequest.request_topic}</h3>\n            <h5>{props.helpRequest.request_details}</h5>\n            {props.link ? <h6>Více informaci <Link to={`/details/${props.helpRequest.request_id}`} target=\"_blank\">zde</Link></h6> : null}\n          </div>\n        </InfoWindow>\n      )}\n    </Marker>\n  )\n};\n\nexport default Map\n","import React from \"react\"\n\nimport ReactLoading from \"react-loading\"\n\nexport default (props) => {\n  return (\n    <div\n      style={{\n        width: \"20%\",\n        height: \"20%\",\n        marginTop: \"10%\",\n        marginLeft: \"40%\",\n      }}\n    >\n      <h1>Načítání...</h1>\n      <ReactLoading type=\"spin\" color=\"black\" height={\"100%\"} width={\"100%\"} />\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\"\n\nexport default ({ requestsPerPage, totalRequests, paginate }) => {\n  const pageNumbers = []\n  const [selectedPageNumber, setSelectedPageNumber] = useState(1)\n  const maxNum = Math.ceil(totalRequests / requestsPerPage)\n\n  const pageClick = (pageNumber) => {\n    if (pageNumber > maxNum) pageNumber = maxNum\n    if (pageNumber < 1) pageNumber = 1\n    setSelectedPageNumber(pageNumber)\n    paginate(pageNumber)\n  }\n\n  for (let i = 1; i <= maxNum; i++) {\n    pageNumbers.push(i)\n  }\n\n  return (\n    <Pagination>\n      <PaginationItem>\n        <PaginationLink first onClick={() => pageClick(0)} />\n      </PaginationItem>\n      <PaginationItem>\n        <PaginationLink previous onClick={() => pageClick(selectedPageNumber - 1)} />\n      </PaginationItem>\n      {pageNumbers.map((number) => (\n        <PaginationItem active={number === selectedPageNumber} onClick={() => pageClick(number)}>\n          <PaginationLink key={number + \"pglink\"} color=\"secondary\">\n            {number}\n          </PaginationLink>\n        </PaginationItem>\n      ))}\n      <PaginationItem>\n        <PaginationLink next onClick={() => pageClick(selectedPageNumber + 1)} />\n      </PaginationItem>\n      <PaginationItem>\n        <PaginationLink last onClick={() => pageClick(maxNum)} />\n      </PaginationItem>\n    </Pagination>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport axios from \"axios\"\r\nimport HelpCard from \"../components/HelpCard\"\r\nimport { baseUrl } from \"../Url\"\r\nimport Map from \"../components/Map\"\r\nimport Loading from \"../components/Loading\"\r\nimport Pagination from \"../components/Pagination\"\r\nimport PageWrap from \"../components/PageWrap\"\r\n\r\nexport default () => {\r\n  const [helpRequests, setHelpRequests] = useState([])\r\n  const [totalCount, setTotalCount] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [requestsPerPage] = useState(6)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    axios\r\n      .get(baseUrl, {\r\n        params: { api_name: \"get_help_requests\", offset: 0, row_count: 1000 },\r\n      })\r\n      .then((res) => {\r\n        setHelpRequests(res.data.result.help_requests)\r\n        setTotalCount(res.data.result.count)\r\n        setLoading(false)\r\n      })\r\n      .catch((err) => console.error(err))\r\n  }, [])\r\n\r\n  const indexOfLastRequest = currentPage * requestsPerPage\r\n  const indexOfFirstRequest = indexOfLastRequest - requestsPerPage\r\n  const currentRequests = helpRequests.slice(indexOfFirstRequest, indexOfLastRequest)\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\r\n\r\n  return (\r\n    <PageWrap>\r\n      <Row>\r\n        <Col align=\"center\">\r\n          <h3>Celkem žádá o pomoc {totalCount} lidí po celé České Republice</h3>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Map\r\n            zoom={7}\r\n            center={{ lat: 49.8600624, lng: 15.5860745 }}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n            helpRequests={helpRequests}\r\n            link={true}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {/*<p>\r\n            Seznam inzerátů ({indexOfFirstRow + 1} - {Math.min(indexOfLastRow, totalCount)} / {totalCount})\r\n          </p>*/}\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Row>\r\n          {currentRequests.map((helpRequest) => (\r\n            <Col md=\"6\" lg=\"4\" xl=\"3\">\r\n              <HelpCard helpRequest={helpRequest} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n      <Row>\r\n        <Col className=\"d-flex justify-content-center\">\r\n          <Pagination requestsPerPage={requestsPerPage} totalRequests={helpRequests.length} paginate={paginate} />\r\n        </Col>\r\n      </Row>\r\n    </PageWrap>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Button } from \"reactstrap\"\r\nimport styled from \"styled-components/macro\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { ReactSVG } from \"react-svg\"\r\nimport lovepalms_svg from \"../lovepalms_minified.svg\"\r\nimport lovepalms_jpg from \"../lovepalms.jpg\"\r\nimport { Row, Col, Card, CardFooter, CardBody } from \"reactstrap\"\r\nimport PageWrap from \"../components/PageWrap\"\r\n\r\nconst Img100 = styled.img`\r\n  width: 100%;\r\n`\r\n\r\nexport default () => (\r\n  <PageWrap fluid={true}>\r\n    <Row className=\"justify-content-center\">\r\n      <Col className=\"my-auto py-5\" align=\"center\" style={{ maxWidth: 800 }}>\r\n        <h3 className=\"text-primary mb-3\">\r\n          <i>\r\n            In the world where you can be anything, be <b>kind</b>.\r\n          </i>\r\n        </h3>\r\n        <p>\r\n          Kindly je tu pro vás. Je to místo, kde si lidé pomáhají. Ať už pomocnou ruku nabízíte nebo ji potřebujete.\r\n          Pomoc na Kindly není o penězích, darech či velkých gestech. Kindly je o obyčejných lidech a všedních dnech.\r\n          Pomoc je nabízena přímo, bez dalších prostředníků. Od lidí, lidem.\r\n        </p>\r\n        <p>\r\n          Kindly vám dává možnost stát se sousedem, kterého byste si sami přáli mít. Cílem je odanonymizovat města a\r\n          vytvořit síť sousedů, kteří ze světa budou dělat lepší místo. Z vašeho světa. Společně.\r\n        </p>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"justify-content-center\">\r\n      <Col sm=\"6\" xl=\"4\" align=\"center\">\r\n        <Card className=\"mb-3\" style={{ maxWidth: 400 }}>\r\n          <CardBody>\r\n            Máte trochu času a chcete udělat dobrý skutek? Nabídnutím pomoci darujete, ale i získáváte. Podívejte se s\r\n            čím potřebují pomoci lidé ve vašem okolí.\r\n          </CardBody>\r\n          <CardFooter>\r\n            <Link to=\"/iwanttohelp\">\r\n              <Button color=\"primary\" outline size=\"lg\">\r\n                Nabídnout pomoc\r\n              </Button>\r\n            </Link>\r\n          </CardFooter>\r\n        </Card>\r\n      </Col>\r\n      <Col sm=\"6\" xl=\"4\" className=\"my-auto\" align=\"center\">\r\n        <Card className=\"mb-3\" style={{ maxWidth: 400 }}>\r\n          <CardBody>\r\n            Potřebujete vy nebo váš blízký donést nákup, doprovodit k lékaři, vyvenčit psa nebo třeba pomoc s technikou?\r\n            Nejbote se požádat ty, co jsou nejblíže.\r\n          </CardBody>\r\n          <CardFooter>\r\n            <Link to=\"/ineedhelp\">\r\n              <Button color=\"primary\" outline size=\"lg\">\r\n                Požádat o pomoc\r\n              </Button>\r\n            </Link>\r\n          </CardFooter>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <ReactSVG\r\n      src={lovepalms_svg}\r\n      afterInjection={(error) => {\r\n        if (error) {\r\n          console.error(error)\r\n          return\r\n        }\r\n      }}\r\n      loading={() => <Img100 src={lovepalms_jpg} />}\r\n    />\r\n    <Row className=\"justify-content-center\">\r\n      <Col className=\"my-auto pb-5\" align=\"center\" style={{ maxWidth: 800 }}>\r\n        <p>Děkujeme všem, co pomáhají!</p>\r\n        <p>\r\n          {\" \"}\r\n          Kindly je a bude kompletně zdarma. Jedná se o projekt vytvořený dobrovolníky pro dobrovolníky. Pokud máte\r\n          jakékoli dotazy či připomínky, neváhejte nás kontaktovat přes formulář v sekci <a href=\"#\">Kontakty</a> nebo\r\n          nám napište na email <span className=\"text-primary\">crewkindly@gmail.com</span>.\r\n        </p>\r\n      </Col>\r\n    </Row>\r\n  </PageWrap>\r\n)\r\n","import React, { useState } from \"react\"\r\nimport { Form, Field, Formik } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport { Button, FormGroup, Row, Col } from \"reactstrap\"\r\nimport axios from \"axios\"\r\nimport { baseUrl } from \"../Url\"\r\nimport { ReactstrapInput } from \"reactstrap-formik\"\r\nimport PageWrap from \"../components/PageWrap\"\r\nimport styled from \"styled-components/macro\"\r\nimport Alert from \"../components/Alert\"\r\nimport { StdFormInfoCol, StdFormCol } from \"../components/FormStandard\"\r\n\r\nexport default () => {\r\n  const [isModalOpen, setModal] = useState(false)\r\n  const toggleModal = () => setModal(!isModalOpen)\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    requester_email: Yup.string().required(\"Chybí email\").email(\"Neplatný email\").max(100, \"Email je příliš dlouhý\"),\r\n    feedback_topic: Yup.string(),\r\n    feedback_description: Yup.string().max(1000, \"Popis je příliš dlouhý\").required(\"Chybí popis\"),\r\n  })\r\n\r\n  const initialValues = {\r\n    requester_email: \"\",\r\n    requester_name: \"\",\r\n    requester_surname: \"\",\r\n    feedback_topic: \"\",\r\n    feedback_description: \"\",\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    toggleModal()\r\n    axios.get(baseUrl, {\r\n      params: {\r\n        api_name: \"post_feedback\",\r\n        email: values.requester_email,\r\n        topic: values.feedback_topic,\r\n        content: values.feedback_description,\r\n      },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PageWrap>\r\n      <Alert\r\n        isOpen={isModalOpen}\r\n        toggle={toggleModal}\r\n        title=\"Title\"\r\n        body=\"Díky moc za feedback1 y Pokud jste odpověděl/a ANO na jakoukoli z výše položených otázek, tak prosím neváhejte a vyplňte formulář\r\n        níže. Zabere Vám to 2 minuty. Vaše zpětypu čivava které je potřeba venčit 2-krát denně, ráno a veče \"\r\n        buttonLabel=\"Není zač\"\r\n      ></Alert>\r\n      <Row className=\"justify-content-center mb-4\">\r\n        <StdFormInfoCol>\r\n          <h3>Pomozte i nám!</h3>\r\n          <p>\r\n            Máte nápad na vylepšení aplikace nebo vám něco nefunguje jak má? Neváhejte nás kontaktovat. Vážíme si zpětné\r\n            vazby a budeme rádi, za jakékoli relevantní připomínky. <b>Děkujeme!</b>\r\n          </p>\r\n        </StdFormInfoCol>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n            {() => (\r\n              <Form>\r\n                <Row className=\"justify-content-center\">\r\n                  <StdFormCol>\r\n                    <FormGroup>\r\n                      <Field\r\n                        label=\"Jméno\"\r\n                        name=\"requester_name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Vaše jméno a příjmení.\"\r\n                        component={ReactstrapInput}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Field\r\n                        label=\"Email*\"\r\n                        name=\"requester_email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Vyplňte email, abychom vás mohli kontaktovat.\"\r\n                        component={ReactstrapInput}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Field\r\n                        label=\"Předmět\"\r\n                        name=\"feedback_topic\"\r\n                        type=\"text\"\r\n                        placeholder=\"O co se jedná?\"\r\n                        component={ReactstrapInput}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Field\r\n                        label=\"Popis*\"\r\n                        id=\"feedback_description\"\r\n                        name=\"feedback_description\"\r\n                        type=\"textarea\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Napiště nám zprávu. Popiště váš nápad či připomínku detailněji.\"\r\n                        component={ReactstrapInput}\r\n                      />\r\n                    </FormGroup>\r\n                  </StdFormCol>\r\n                </Row>\r\n                <Row>\r\n                  <Col align=\"center\">\r\n                    <Button outline color=\"primary\" type=\"submit\">\r\n                      Poslat připomínku\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Col>\r\n      </Row>\r\n    </PageWrap>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Navbar, NavbarBrand, Nav, NavItem, Collapse, NavLink } from \"reactstrap\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default () => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  return (\r\n    <div>\r\n      <Navbar light expand=\"md\" fixed=\"top\" color=\"light\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          <b className=\"text-primary\">Kindly</b>\r\n        </NavbarBrand>\r\n\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/iwanttohelp\">\r\n                Nabízím pomoc\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/ineedhelp\">\r\n                Žádám o pomoc\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/feedback\">\r\n                Kontakt\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport { baseUrl } from \"../Url\"\nimport Map from \"./Map\"\nimport { Button } from \"reactstrap\"\nimport Loading from \"./Loading\"\n\nexport default (props) => {\n  const [helpRequest, setHelpRequest] = useState(null)\n  const [navigationLink, setNavigationLink] = useState(\"\")\n\n  useEffect(() => {\n    axios\n      .get(baseUrl, {\n        params: {\n          api_name: \"get_help_request_for_id\",\n          request_id: props.match.params.request_id,\n        },\n      })\n      .then((res) => {\n        let result = res.data.result\n        setHelpRequest(result)\n        setNavigationLink(\n          `https://www.google.com/maps/dir/?api=1&destination=${result.requester_address_lat},${result.requester_address_lng}&travelmode=driving`\n        )\n      })\n      .catch((err) => console.error(err))\n  }, [])\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n      }}\n    >\n      {helpRequest === null ? (\n        <Loading />\n      ) : (\n        <div>\n          <h1>Jak můžete Vy pomoci ostatním?</h1>\n          />\n          <div\n            className=\"wrapper\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <div className=\"description\">\n              <h1>{helpRequest.request_topic}</h1>\n              <h4>{helpRequest.request_details}</h4>\n              <p>{helpRequest.request_description}</p>\n              <p>{helpRequest.requester_name ? `Jméno = ${helpRequest.requester_name}` : null}</p>\n              <p>{helpRequest.requester_email ? `Email = ${helpRequest.requester_email}` : null}</p>\n              <p>\n                {helpRequest.requester_phone_number ? `Telefonní číslo = ${helpRequest.requester_phone_number}` : null}\n              </p>\n              <p>{helpRequest.requester_age ? `Věk = ${helpRequest.requester_age}` : null}</p>\n              <p>\n                {helpRequest.request_create_timestamp\n                  ? `Den zadani = ${new Date(helpRequest.request_create_timestamp).toLocaleDateString()}`\n                  : null}\n              </p>\n            </div>\n            <div\n              className=\"map\"\n              style={{\n                width: \"80%\",\n              }}\n            >\n              <Map\n                zoom={12}\n                center={{\n                  lat: parseFloat(helpRequest.requester_address_lat),\n                  lng: parseFloat(helpRequest.requester_address_lng),\n                }}\n                containerElement={<div style={{ height: `100%` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n                helpRequests={[helpRequest]}\n                link={false}\n              />\n\n              <a href={navigationLink} target=\"_blank\">\n                <Button\n                  color=\"primary\"\n                  style={{\n                    width: \"40%\",\n                    marginLeft: \"30%\",\n                    marginTop: \"30px\",\n                  }}\n                >\n                  Otevřít v navigaci\n                </Button>\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from \"react\"\nimport { HashRouter as Router, Route } from \"react-router-dom\"\nimport INeedHelp from \"./pages/INeedHelp\"\nimport IWantToHelp from \"./pages/IWantToHelp\"\nimport LandingPage from \"./pages/LandingPage\"\nimport Feedback from \"./pages/Feedback\"\nimport Navbar from \"./components/Navbar\"\nimport HelpRequestDetail from \"./components/HelpRequestDetail\"\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Route path=\"/\" exact component={LandingPage} />\n      <Route path=\"/ineedhelp\" component={INeedHelp} />\n      <Route path=\"/iwanttohelp\" component={IWantToHelp} />\n      <Route path=\"/feedback\" component={Feedback} />\n      <Route path=\"/details/:request_id\" component={HelpRequestDetail} />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}